val Hnode(x,Hnode(one,Hnode(y,Hnode(two,Nill))))=build4("x",1,"y",2);
build4("x",2,"y",3);
unzip(it);
build4(1,"x",3,"y");
unzip(it);
zip it;
unzip it;

intbseq 2;
bForward it;
bForward it;
bForward it;
bForward it;
bForward it;
bBack it;
bBack it;
bBack it;
bBack it;
bBack it;
bBack it;
bBack it;
bBack it;
intbseq 10;
bForward it;
bForward it;
bBack it;
bBack it;
bmap (fn x => x*x*x) (intbseq 1);
bForward it;
bForward it;
bForward it;
bForward it;
bBack it;
bBack it;

bfilter(fn x => x mod 2 = 0) Back (intbseq 2);
bForward it;
bForward it;
bForward it;
bBack it;
bBack it;
bBack it;
bBack it;

seq2bseq (downfrom ~1)(from 0);
bForward it;
bForward it;
bForward it;
bBack it;
bBack it;
bBack it;
bBack it;
seq2bseq (downfrom 0)(from 0);
seq2bseq (from 0)(from 0);
bForward it;
bForward it;
bForward it;
bBack it;
bBack it;
bBack it;
bBack it;

intbseq 0;
bSeqJump it 2;
bForward it;
bForward it;
bForward it;
bBack it;
bBack it;
bBack it;
bBack it;

taxiCabSeq();
tail it;
tail it;
tail it;
